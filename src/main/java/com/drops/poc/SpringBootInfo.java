package com.drops.poc;

import com.drops.utils.PropertiesBean;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @ClassName: SpringBootInfo
 * @Description: TODO
 * @Author: Summer
 * @Date: 2021/7/27 16:58
 * @Version: v1.0.0
 * @Description: Spring Boot Info
 **/
public class SpringBootInfo {
    List<String> pointListV1 = new ArrayList<>();
    List<String> pointListV2 = new ArrayList<>();
    Map<String,String> h2Headers = new HashMap<>();
    boolean SpringbootVersionV1 = false;
    String[] basicPoint = new String[]{"cloudfoundryapplication","hystrix.stream" };
    PropertiesBean properties;

    public SpringBootInfo(){
        h2Headers.put("Cache-Control", "max-age=0");

        pointListV1.add("autoconfig");
        pointListV1.add("heapdump");
        pointListV1.add("dump");
        pointListV1.add("mappings");
        pointListV1.add("auditevents");
        pointListV1.add("beans");
        pointListV1.add("health");
        pointListV1.add("configprops");
        pointListV1.add("info");
        pointListV1.add("loggers");
        pointListV1.add("threaddump");
        pointListV1.add("metrics");
        pointListV1.add("trace");
        pointListV1.add("env/spring.jmx.enabled");



        pointListV2.add("actuator/auditevents");
        pointListV2.add("actuator/beans");
        pointListV2.add("actuator/health");
        pointListV2.add("actuator/conditions");
        pointListV2.add("actuator/configprops");
        pointListV2.add("actuator/info");
        pointListV2.add("actuator/loggers");
        pointListV2.add("actuator/threaddump");
        pointListV2.add("actuator/metrics");
        pointListV2.add("actuator/httptrace");
        pointListV2.add("actuator/mappings");
        pointListV2.add("actuator/jolokia");
        pointListV2.add("actuator/hystrix.stream");
        pointListV2.add("actuator/env/spring.jmx.enabled");

        pointListV2.add("monitor/auditevents");
        pointListV2.add("monitor/beans");
        pointListV2.add("monitor/conditions");
        pointListV2.add("monitor/configprops");
        pointListV2.add("monitor/env");
        pointListV2.add("monitor/info");
        pointListV2.add("monitor/loggers");
        pointListV2.add("monitor/heapdump");
        pointListV2.add("monitor/threaddump");
        pointListV2.add("monitor/metrics");
        pointListV2.add("monitor/scheduledtasks");
        pointListV2.add("monitor/httptrace");
        pointListV2.add("monitor/mappings");
        pointListV2.add("monitor/jolokia");
        pointListV2.add("monitor/hystrix.stream");
    }




    private void parseProperties(PropertiesBean properties){
        if (properties.getHaveInfo()){
            System.out.println("\tJVM信息:\t\t"+properties.getJvmName());
            System.out.println("\t端口信息:\t\t"+properties.getServerPort());
            System.out.println("\tJava版本:\t\t"+properties.getJavaVersion());
            System.out.println("\t用户名:\t\t"+properties.getUserName());
        }
    }


}
